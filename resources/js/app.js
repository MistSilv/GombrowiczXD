// Importy niezbƒôdnych zale≈ºno≈õci
import './bootstrap';
import { registerSW } from 'virtual:pwa-register';
import { Html5Qrcode } from 'html5-qrcode';

// Rejestracja Service Workera 
const updateSW = registerSW({
  scope: '/', // üîß To zapewnia pe≈Çne przechwycenie ca≈Çego ruchu
  onNeedRefresh() {
    if (confirm('Nowa wersja aplikacji jest dostƒôpna. Od≈õwie≈ºyƒá?')) {
      updateSW(true);
    }
  },
  onRegistered(reg) {
    console.log('‚úÖ Service Worker registered with scope:', reg?.scope);
  },
  onRegisterError(error) {
    console.error('‚ùå SW registration failed:', error);
  },
});

// Zmienna pomocnicza do przechwycenia zdarzenia instalacji PWA
let deferredPrompt;

// Przycisk instalacji PWA z interfejsu 
const installBtn = document.getElementById('installPWA');

// Nas≈Çuchiwanie zdarzenia: przeglƒÖdarka gotowa zaproponowaƒá instalacjƒô PWA
window.addEventListener('beforeinstallprompt', (e) => {
    e.preventDefault(); // Blokowanie domy≈õlnego zachowania przeglƒÖdarki
    deferredPrompt = e; // Zapamiƒôtanie zdarzenia instalacji
    if (installBtn) installBtn.style.display = 'block'; // Pokazanie przycisku instalacji
});

// Obs≈Çuga klikniƒôcia przycisku instalacji PWA
if (installBtn) {
    installBtn.addEventListener('click', async () => {
        if (!deferredPrompt) return; // Je≈õli nie ma zdarzenia instalacji, nic nie r√≥b

        deferredPrompt.prompt(); // Wy≈õwietlenie natywnego okna instalacji
        const { outcome } = await deferredPrompt.userChoice; // Oczekiwanie na wyb√≥r u≈ºytkownika

        if (outcome === 'accepted') {
            installBtn.style.display = 'none'; // Ukrycie przycisku po zaakceptowaniu
        }

        deferredPrompt = null; // Reset zmiennej
    });
}

// Automatyczne sprawdzenie sesji po odzyskaniu po≈ÇƒÖczenia internetowego
window.addEventListener('online', async () => {
    try {
        const response = await fetch('/welcome', { credentials: 'same-origin' });

        // Je≈õli serwer przekierowa≈Ç na login lub b≈ÇƒÖd autoryzacji, prze≈Çaduj stronƒô logowania
        if (response.redirected && response.url.includes('/login')) {
            window.location.href = '/login';
        }
        if (response.status === 401 || response.status === 419) {
            window.location.href = '/login';
        }
    } catch (e) {
    }
});
